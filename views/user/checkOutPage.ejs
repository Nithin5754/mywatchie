<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.15/dist/tailwind.min.css"
      rel="stylesheet"
    />
    <title>Place Order</title>
  </head>
  <style>
    .scrollBar {
  -ms-overflow-style: none; /* for Internet Explorer, Edge */
  scrollbar-width: none; /* for Firefox */
  overflow-y: scroll; 
}

.scrollBar::-webkit-scrollbar {
  display: none; /* for Chrome, Safari, and Opera */
}
  </style>

  <body class="bg-gray-100 font-sans">
    <!-- header.ejs -->
    <%-
    include('./partials/header.ejs',{iswallet,isProfile,isUrl,islogout,isCreateAccount,isCreateAccountUrl,verifyUserEmail,cartItems})
    %>

    <!-- Container for Left and Right Sections -->
    <div class="container mx-auto flex p-4 mt-16">
      <!-- Left Section -->
      <div class="w-2/3 p-4">
        <!-- Payment Information -->
        <div class="bg-white rounded-lg shadow-md p-4 mb-4">
          <h2 class="text-lg font-semibold mb-4">Payment Information</h2>
          <div class="space-y-4">
            <!-- Payment Options (Radio Buttons) -->
            <div class="flex items-center space-x-2">
              <input
                type="radio"
                id="cashOnDelivery"
                name="paymentMethod"
                value="cash"
              />
              <label for="cashOnDelivery">Cash on Delivery</label>
            </div>
            <div class="flex items-center space-x-2">
              <input
                type="radio"
                id="creditCard"
                name="paymentMethod"
                value="credit"
              />
              <label for="creditCard">Credit Card</label>
            </div>
            <div class="flex items-center space-x-2">
              <input
                type="radio"
                id="wallet"
                name="paymentMethod"
                value="wallet"
              />
              <label for="wallet">wallet</label>
            </div>
            <div class="flex items-center space-x-2">
              <input
                type="radio"
                id="debitCard"
                name="paymentMethod"
                value="debit"
              />
              <label for="debitCard">Debit Card</label>
            </div>
          </div>
        </div>

        <!-- Delivery Options -->
        <div class="bg-white rounded-lg shadow-md p-4 mb-4">
          <h2 class="text-lg font-semibold mb-4">Delivery Options</h2>
          <div class="space-y-4">
            <!-- Delivery Speed (Radio Buttons) -->
            <div class="flex items-center space-x-2">
              <input
                type="radio"
                id="fastDelivery"
                name="deliverySpeed"
                value="fast"
              />
              <label for="fastDelivery">Fast Delivery</label>
            </div>
            <div class="flex items-center space-x-2">
              <input
                type="radio"
                id="normalDelivery"
                name="deliverySpeed"
                value="normal"
              />
              <label for="normalDelivery">Normal Delivery</label>
            </div>
          </div>
        </div>

        <!-- Primary Address (Dummy Example) -->
        <div class="bg-white rounded-lg shadow-md p-4">
          <h2 class="text-lg font-semibold mb-4">Primary Address</h2>
          <p><%=isAddressTheir.address_username%></p>
          <p><%=isAddressTheir.city%></p>
          <p><%=isAddressTheir.state%></p>
          <p><%=isAddressTheir.country%></p>
          <p>Phone: <%= verifyUserEmail.mobileNumber %></p>
          <button class="bg-blue-700 text-white font-bold p-2 rounded-md">
            <a href="/selectingPrimaryAddress">change address</a>
          </button>
        </div>
      </div>

      <!-- Right Section (Order Summary) -->
      <div class="w-1/3 p-4">
        <div class="bg-white rounded-lg shadow-md p-4 mb-4">
          <h2 class="text-lg font-semibold mb-4">Order Summary</h2>
          <!-- Product List (Assuming it's a dynamic list) -->
          <% isProduct.forEach((item, index)=> { %>
          <div class="flex items-center mb-2">
            <div class="w-16 h-16 bg-gray-200 mr-4">
              <img
                src="/<%= item.product_image_url[0] %>"
                alt="<%= item.product_name %>"
              />
            </div>
            <div>
              <h3 class="font-semibold"><%= item.product_name %></h3>
              <p class="text-gray-500">Quantity: <%= isquantity[index] %></p>
              <p class="text-gray-500" id="productPrice">
                Price: $<%= isSingleTotalPrice[index] %>
              </p>
            </div>
          </div>
          <% }); %>

          <!-- Subtotal -->
          <div class="mt-4">
            <h3 class="font-semibold">Subtotal: $<%= userCart.total %></h3>
          </div>
          <% let Shipping=0 %>
          <!-- Shipping Cost (if applicable) -->
          <% if (userCart.total>=400) { %> <% Shipping=100 %>

          <div class="mt-4">
            <h3 class="font-semibold">Shipping Cost: $100</h3>
          </div>
          <% }else{ %> <% let Shipping=0 %>
          <div class="mt-4">
            <h3 class="font-semibold">Shipping Cost:0</h3>
          </div>
          <% } %>

          <div class="mt-4 flex flex-row gap-5">
            <span class="font-semibold">Discount :</span>
             <p id="totalPriceElement" class=" font-semibold">0</p>
          </div>

          <!-- Tax (if applicable) -->
          <div class="mt-4">
            <h3 class="font-semibold">
              Tax (5%): $<%= (userCart.total * 0.05).toFixed(2) %>
            </h3>
          </div>

          

          <!-- Total Price -->
          <div class="mt-4">
            <h3>total price:</h3>
            <h3 class="font-semibold" id="totalPrice" ><%= (userCart.total+(userCart.total * 0.05)+Shipping).toFixed(2) %></h3>

          </div>
        </div>
      </div>

      <div
        class="amount-box text-center mt-4 bg-white h-44 rounded-lg shadow-lg p-4 flex flex-col justify-around"
      >
        <img
          src="https://lh3.googleusercontent.com/ohLHGNvMvQjOcmRpL4rjS3YQlcpO0D_80jJpJ-QA7-fQln9p3n7BAnqu3mxQ6kI4Sw"
          alt="wallet"
          class="mx-auto w-12 h-12"
        />
        <p class="text-md font-semibold">Total Balance</p>
       <SPan>$</SPan> <p class="text-lg font-bold text-green-600" id="walletBalance"><%= (isWallet.balance).toFixed(2)  %></p>
      </div>


  <!-- coupoun items available -->
  <div class="mt-4 ml-6 w-96">
    <% if (isCoupons.length === 0 || isCoupons === '') { %>
      <h5 class="font-semibold">Coupons not available</h5>
    <% } else { %>
      <h5 class="font-semibold">Available Coupons</h5>
    <% } %>
  
    <div class="scrollBar h-52 overflow-scroll">
      <% isCoupons.forEach((coupon, index) => { %>
        <% if (userCart.total > coupon.minimumPurchase) { %>
          <div class="flex items-center justify-between border gap-4 p-2 mb-2 rounded-lg bg-white shadow-md">
            <div class="font-semibold">
              <%= coupon.couponName %>
            </div>
            <button class="bg-blue-600 text-white px-2 py-2 rounded-md hover:bg-blue-700 focus:outline-none" 
              data-coupon-name="<%= coupon.couponName %>"
              data-coupon-value="<%= coupon.couponValue %>"
              id="data-coupon-btn">
              Apply
            </button>
          </div>
        <% } %>
      <% }); %>
      
      <div class="mt-4 ml-6 w-96">
        <button id="coupons-btn" class="bg-red-400 p-1 text-white font-bold hover:bg-red-700 rounded hidden">
          <i class="fas fa-times"></i> Remove
        </button>
      </div>
      
    </div>

               <!-- Place Order button (Centered) -->
       <div class="flex justify-center">
        <button
        id="placeOrder"
          type="submit"
          onclick="completePurchase()"
          class="bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 font-extrabold capitalize rounded w-full items-center"
        >
          Place Order
        </button>
  
        <button
        id="removeAlreadyExist"
        style="display: none;"
        class="bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 font-extrabold capitalize rounded w-full items-center"
      >
        Already used
      </button>
      </div>
      </div>


      
 

    </div>


    <div id="success-message" style="display:none">Payment Successful!</div>



    <%- include('./partials/foooter.ejs') %>
<script>

  const removeCoupons=document.getElementById('coupons-btn')

 const couponButtons = document.querySelectorAll('#data-coupon-btn');
 let previousButton = null;
let previousCouponValue = 0;
let cartPriceSubTotal = parseFloat(document.getElementById('totalPrice').textContent);
console.log(cartPriceSubTotal,"hello my dear");
 couponButtons.forEach((btn) => {
 btn.addEventListener('click', () => {
  const couponSingleValue = parseFloat(btn.getAttribute('data-coupon-value'));
  const couponName = btn.getAttribute('data-coupon-name');
  console.log(couponName,"MY COUPON");

  const cartTotalElement = document.getElementById('totalPriceElement');
  let cartPrice = parseFloat(cartTotalElement.textContent);

if (previousButton) {
    previousButton.disabled = false;
    previousButton.textContent = 'Apply';
    previousButton.style.textDecoration = "none";
    cartPrice -= previousCouponValue;
    cartPriceSubTotal += previousCouponValue;
  }

  btn.disabled = true;
  btn.textContent = "applied";

  removeCoupons.style.display="block"
  
  btn.style.textDecoration = "line-through";
  

  cartPrice = couponSingleValue;

  cartTotalElement.textContent = cartPrice.toFixed(2);



  cartPriceSubTotal -= cartPrice;
document.getElementById('totalPrice').textContent = cartPriceSubTotal.toFixed(2);



fetch('/admincouponManagement/addtocustomer',{
    method:'POST',
    headers:{
      'Content-Type':'application/json',

    },
    body: JSON.stringify({
  couponValue:couponSingleValue,
  newCartTotal:cartPriceSubTotal,
  appliedCoupon:couponName
})
  })
  .then((response)=>response.json())
  .then((data)=>{
    const placeOrder=document.getElementById('placeOrder')
      const removeOrderBtn=document.getElementById('removeAlreadyExist')
      if(data.valid){
      placeOrder.style.display="none"
      removeOrderBtn.style.display="block"
      removeOrderBtn.style.backgroundColor="red"
      console.log("data.valid",data.valid);

    }else{
      placeOrder.style.display="block"
      placeOrder.style.backgroundColor="blue"
      removeOrderBtn.style.display="none"

      console.log("data.valid",data.valid);
    }
  })
  .catch((error)=>console.log(error,"error sending coupon send "))
  previousButton = btn;
  previousCouponValue = couponSingleValue;
 });
});


removeCoupons.addEventListener('click',()=>{
    window.location.reload()
  })

</script>





































    <script>
          const totalPrice = document.getElementById('totalPrice').textContent;
          const totalAmount = parseFloat(totalPrice );

          const walletBalance=document.getElementById('walletBalance').textContent;
          const  convertedWalletBalance=parseFloat(walletBalance)

      async function completePurchase() {
        const selectedPaymentMethod = document.querySelector(
          'input[name="paymentMethod"]:checked',
        );
       


        if (selectedPaymentMethod) {
          const paymentMethod = selectedPaymentMethod.value;

          if (paymentMethod === 'cash') {
            window.location.href = `/confirmOrder/${paymentMethod}`;
          } else if (paymentMethod === 'wallet'&&  convertedWalletBalance>=totalAmount) {

            const amount1 = document.getElementById('totalPrice').textContent;
            const amount = parseFloat(amount1);
            console.log(amount ,"hello my total price element");

            fetch('/userwallet', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
       
        body: JSON.stringify({amount}),
      })
      .then(response => response.json())
      .then((data)=>{
        if(data){
          window.location.href ='/lootie';
        }
      })
      .catch((err)=>console.log("error",err))


          
          } else if (paymentMethod === 'debit') {
            const amount1 = document.getElementById('totalPrice').textContent;
            const amount = parseFloat(amount1);

            console.log(amount, 'amt');
            fetch('/createOrder/' + amount, {
              method: 'GET',
              headers: {
                'Content-Type': 'application/json',
              },
            })
              .then(response => response.json())
              .then(orderDetails => {
                console.log(orderDetails, 'orderData');
                if (orderDetails.order.id) {
                  const options = {
                    key: 'rzp_test_7dotomB7U7VvTw',
                    amount: orderDetails.order.amount,
                    currency: 'INR',
                    name: 'my watchie.com',
                    description: 'Payment for Your Order',
                    image: 'path_to_your_logo.png',
                    order_id: orderDetails.order.id, // Order ID received from the server
                    handler: function (response) {
                      window.location.href = `/lootie`;
                    },
                    prefill: {
                      name: orderDetails.profileName,
                      email: orderDetails.userEmail,
                      contact: '7902965815',
                    },
                    notes: {
                      address: 'mywatchie coporate office',
                    },
                    theme: {
                      color: '#FFFF00',
                    },
                  };

                  const rzp = new Razorpay(options);
                  rzp.open();
                } else {
                  console.log('error occur');
              
                }
              })
              .catch(error => {
                console.log(error);
              });
          }else{
            if(paymentMethod === 'wallet'&&  convertedWalletBalance<totalAmount){
                    alert("insufficent balance in wallet")
                  }else{
                 console.log("error in payment method");

                  }
          }
        }
      }
    </script>

    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <script
      src="https://cdn.jsdelivr.net/npm/alpinejs@2.8.2/dist/alpine.min.js"
      defer
    ></script>

    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

  </body>
</html>